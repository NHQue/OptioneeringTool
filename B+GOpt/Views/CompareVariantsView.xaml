<Window x:Class="B_GOpt.Views.CompareVariantsView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:local="clr-namespace:B_GOpt.Views"
            xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
            d:DataContext="{d:DesignInstance local:CompareVariantsView}"
            mc:Ignorable="d" 
            d:DesignHeight="450" d:DesignWidth="800"
            ResizeMode="NoResize"
            WindowStartupLocation="Manual" 
            Top="200" Left="30"
            ShowInTaskbar="False"
            Height="620" Width="770"
            WindowStyle="None"
            Background="Transparent"
            AllowsTransparency="True"
            FontFamily="/Fonts/#Poppins-Regular" FontWeight="Light">

    <Window.Resources>
        <!--MenuButtonTheme-->
        <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="MenuButtonTheme">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="{TemplateBinding Background}">
                                <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       Margin="50,0,0,0"
                                       FontFamily="/Fonts/#Poppins"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style.Setters>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="#22202f"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <!--PlainButtonTheme-->
        <Style 
           TargetType="{x:Type Button}"
           x:Key="CustomButtonTransparentTheme">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border         CornerRadius="12"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            Margin="0,0,0,0"
                                            Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style.Setters>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--TransparentButtonTheme-->
        <Style 
           TargetType="{x:Type Button}"
           x:Key="CustomButtonPlainTheme">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border         CornerRadius="10"
                                            BorderThickness="0"
                                            BorderBrush="Black"
                                            Margin="0,0,0,0"
                                            Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="AliceBlue"/>

                <Setter Property="BorderThickness" Value="0"/>
            </Style.Setters>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="SlateGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--MaterialButtonTheme-->
        <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="MaterialButtonTheme">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid   VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    >
                                <Border>
                                    <Image Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Border>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Opacity" Value=".3"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style.Setters>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value=".8"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Opacity" Value=".6"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--GearButtonTheme-->
        <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}"
           x:Key="GearButtonTheme">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid   VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    >
                                <Border>
                                    <Image Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Border>

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style.Setters>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value=".6"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value=".3"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--SliderTheme-->
        <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border  BorderThickness="0" BorderBrush="DarkGray" Background="DarkGray" Height="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" Background="Black"  BorderThickness="0" BorderBrush="Black" Height="2" Opacity="0.8"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Height="10" Width="10" Fill="Black"></Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="Slider"  TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>
        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="60" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Border Background="WhiteSmoke"
            CornerRadius="20">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="280"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="150"/>
                <RowDefinition Height="330"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid   Grid.Column="4"
                    Grid.Row="0"
                    Grid.ColumnSpan="2">
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right">

                    <Border BorderThickness="1"
                            BorderBrush="DarkGray"
                            Opacity=".7"
                            CornerRadius="5"
                            Height="18" Width="18"
                            Margin="0,0,5,0">
                        <Button 
                            BorderThickness="0"
                            Content="🗕"
                            FontSize="8"
                            Background="Transparent"
                            Foreground="DarkGray"
                            Click="ButtonMinimize_Click"
                            >
                        </Button>
                    </Border>

                    <Border BorderThickness="1"
                            BorderBrush="DarkGray"
                            Opacity=".7"
                            CornerRadius="5"
                            Height="18" Width="18"
                            Margin="0,0,30,0">
                        <Button 
                            BorderThickness="0"
                            Content="✕"
                            FontSize="8"
                            Background="Transparent"
                            Foreground="DarkGray"
                            Click="ButtonClose_Click"
                            >
                        </Button>
                    </Border>
                </StackPanel>

            </Grid>


            <Border Grid.Column="0"
                        Grid.Row="0"
                        Grid.RowSpan="5"
                        CornerRadius="20" 
                        Width="70"
                        MouseDown="Border_MouseDown"
                        >
                <Border.Background>
                    <SolidColorBrush Color="Black" Opacity="0.9"/>

                </Border.Background>

                <Button
                             Height="15" Width="15"
                             Foreground="White"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Bottom"
                             FontSize="14"
                             Opacity=".3"
                             Style="{StaticResource GearButtonTheme}"
                             Content="C:\Users\Niklas\Desktop\Studium\Master\M4\Thesis\Tool\OptioneeringTool\OptioneeringTool\B+GOpt\EmbeddedResources\Images\gear.png"
                             Margin="18,0,0,25"
                             Click="InstructionsButton_Click"
                        />

            </Border>

            <Grid Grid.Column="2"
                        Grid.Row="1">

                <StackPanel Grid.Column="2"
                        Grid.Row="1"
                        Orientation="Vertical">
                    <TextBlock  Text="Compare the selected variants"
                        Grid.Column="2"
                        Grid.Row="1"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left"
                        Foreground="Black"
                        FontWeight="Normal"
                        FontSize="20"
                        Margin="0,0,0,0"
                        FontFamily="/Fonts/#Poppins"/>
                    <TextBlock  Text="This tool allows you to make data based decisions on your building project.&#x0a;Select your building in the Rhino viewport and get LCA and construction costs &#x0a;feedback in real time."
                            
                        Grid.Column="2"
                        Grid.Row="1"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left"
                        Foreground="DarkGray"
                        FontWeight="ExtraLight"
                        FontSize="8"
                        Margin="0,3,0,0"
                        FontFamily="/Fonts/#Poppins"/>

                </StackPanel>


                <Border VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        Height="40"
                        Width="40"
                        Opacity=".9">
                    <Image Source="C:\Users\Niklas\Desktop\Studium\Master\M4\Thesis\Tool\OptioneeringTool\OptioneeringTool\B+GOpt\EmbeddedResources\Images\bg.jpg"/>
                    <Border.Clip>
                        <RectangleGeometry RadiusX="10"
                                           RadiusY="10"
                                           Rect="0,0,40,40"/>
                    </Border.Clip>

                </Border>

                <Border VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        BorderThickness="1"
                        BorderBrush="DarkGray"
                        CornerRadius="10"
                        Height="40"
                        Width="40">
                </Border>
            </Grid>

            <Grid Grid.Column="2"
                  Grid.Row="2"
                  Grid.RowSpan="2">
                <StackPanel Orientation="Vertical">

                    <Border 
                            Height="55" Width="260"
                            CornerRadius="10"
                            Margin="0,0,0,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left">

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,2" Opacity=".9">
                                <GradientStop Color="#ffb73a" Offset="0.0"/>
                                <GradientStop Color="#ffc554" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <TextBlock  x:Name="ResultsCase1"
                            Text=""
                            Foreground="Black"
                            FontSize="10"
                            FontWeight="Light"
                            Margin="10,5,0,0"/>
                    </Border>

                    <Border 
                            Height="55" Width="260"
                            CornerRadius="10"
                            Margin="0,5,0,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left">

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,2" Opacity=".9">
                                <GradientStop Color="#ffb73a" Offset="0.0"/>
                                <GradientStop Color="#ffc554" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Border 
                            Height="55" Width="260"
                            CornerRadius="10"
                            Margin="0,5,0,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left">

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,2" Opacity=".9">
                                <GradientStop Color="#ffb73a" Offset="0.0"/>
                                <GradientStop Color="#ffc554" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Border 
                            Height="55" Width="260"
                            CornerRadius="10"
                            Margin="0,5,0,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left">

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,2" Opacity=".9">
                                <GradientStop Color="#ffb73a" Offset="0.0"/>
                                <GradientStop Color="#ffc554" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Border 
                            Height="55" Width="260"
                            CornerRadius="10"
                            Margin="0,5,0,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left">

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,2" Opacity=".9">
                                <GradientStop Color="#ffb73a" Offset="0.0"/>
                                <GradientStop Color="#ffc554" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Border 
                            Height="55" Width="260"
                            CornerRadius="10"
                            Margin="0,5,0,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left">

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,2" Opacity=".9">
                                <GradientStop Color="#ffb73a" Offset="0.0"/>
                                <GradientStop Color="#ffc554" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Border 
                            Height="55" Width="260"
                            CornerRadius="10"
                            Margin="0,5,0,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left">

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,2" Opacity=".9">
                                <GradientStop Color="#ffb73a" Offset="0.0"/>
                                <GradientStop Color="#ffc554" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Border 
                            Height="55" Width="260"
                            CornerRadius="10"
                            Margin="0,5,0,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left">

                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,2" Opacity=".9">
                                <GradientStop Color="#ffb73a" Offset="0.0"/>
                                <GradientStop Color="#ffc554" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>



                </StackPanel>

            </Grid>


            <Grid Grid.Column="2" Grid.Row="2"
                  Grid.RowSpan="2" Grid.ColumnSpan="3"
                  Height="250"
                  Width="370"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Top">

                <Grid Margin="0,0,0,0">

                    <lvc:CartesianChart Series="{Binding SeriesCollection}" LegendLocation="Bottom">
                        <lvc:CartesianChart.AxisY>
                            <lvc:Axis Title="Sales" LabelFormatter="{Binding YFormatter}"></lvc:Axis>
                        </lvc:CartesianChart.AxisY>
                        <lvc:CartesianChart.AxisX>
                            <lvc:Axis Title="Month" Labels="{Binding Labels}"></lvc:Axis>
                        </lvc:CartesianChart.AxisX>
                    </lvc:CartesianChart>

                </Grid>

            </Grid>


            <Grid Grid.Column="4" Grid.Row="3">

                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom">

                    <Button Content="Update"
                                Margin="0,0,0,0"
                                FontSize="10"
                                Foreground="Black" 
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Left"
                                Click="ButtonUpdate_Click"
                                >
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="Black"/>

                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderThickness" Value="2"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightGray"/>
                                    </Trigger>

                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Width="60" Height="25"
                                    CornerRadius="12" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background ="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center">
                                    </ContentPresenter>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <Button Content="Clear Values"
                                Margin="10,0,0,0"
                                FontSize="10"
                                Foreground="Black" 
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Left"
                                Click="ButtonClearValues_Click"
                                >
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="Black"/>

                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderThickness" Value="2"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightGray"/>
                                    </Trigger>

                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Width="70" Height="25"
                                    CornerRadius="12" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background ="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center">
                                    </ContentPresenter>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <Button Content="Export as PDF"
                                Margin="10,0,0,0"
                                FontSize="10"
                                Foreground="Black" 
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Left"
                                Click="ButtonExportPDF_Click"
                                >
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="BorderBrush" Value="Black"/>

                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderThickness" Value="2"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="LightGray"/>
                                    </Trigger>

                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Width="85" Height="25"
                                    CornerRadius="12" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background ="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center">
                                    </ContentPresenter>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                </StackPanel>

            </Grid>
            
        </Grid>

    </Border>

</Window>
